{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "564b6080_d395c513",
        "filename": "config/openbmc-spelling.txt",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-17T18:34:18Z",
      "side": 1,
      "message": "I\u0027m surprised we named this file \"openbmc-spelling\" if it came from somewhere else.  Should be reusing something from the codespell package directly instead of adding this to our repo?",
      "revId": "901f85dc972dbc4af11b009d51726efbcaa89198",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "066e3acf_6d1371e5",
        "filename": "config/openbmc-spelling.txt",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-17T18:38:41Z",
      "side": 1,
      "message": "On my system it looks like this is installed here:\n\n$ more /usr/lib/python3.11/site-packages/codespell_lib/data/dictionary.txt\n\nIf so, we should just use the bundled one, right?\n\nThe comments in format-code.sh say \"Run the codespell with _openbmc specific_ spellings...\" ( emphasis mine )  This implies to me that this file was intended to cover things we noticed that weren\u0027t in upstream codespell like...\n\ndubs -\u003e dbus\n\nMy expectation was that this was covering the \"general\" codespell:\n\n168:    codespell --builtin clear,rare,en-GB_to_en-US -d --count \"$commit_filename\"",
      "parentUuid": "564b6080_d395c513",
      "revId": "901f85dc972dbc4af11b009d51726efbcaa89198",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3655d19d_0c27ed52",
        "filename": "config/openbmc-spelling.txt",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-06-18T07:02:37Z",
      "side": 1,
      "message": "Hi Patrick, long back when we initially added the [support for spellcheck on commit messages](https://lore.kernel.org/openbmc/6EE109AE-3FB9-4E5F-A6E3-88528EABFA56@getmailspring.com/), we agreed that a generic dictionary might not be good enough for openbmc \u0026 also we need an openbmc specific dictionary so that we can add some openbmc specific spellings whenever we can without waiting for things to be merged upstream.\n\nAnd to start with, we copied the existing codespell dictionary used by the Linux kernel community \u0026 marked it as openbmc-spelling.txt\n\n\u003e On my system it looks like this is installed here:\n\u003e $ more /usr/lib/python3.11/site-packages/codespell_lib/data/dictionary.txt\n\u003e If so, we should just use the bundled one, right?\n\nYes, we could use the one that is already shipped with the codespell package, but we will not have the leverage to add words as and when possible without waiting for things to be upstreamed.\n\nThe approach we took was, that we periodically pull the dictionary from upstream and use that to check in CI, this will also provide us the flexibility to add openbmc-specific words to it. This commit basically pulled things from the upstream codespell repository.",
      "parentUuid": "066e3acf_6d1371e5",
      "revId": "901f85dc972dbc4af11b009d51726efbcaa89198",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d2acbe3_7ee6dc32",
        "filename": "config/openbmc-spelling.txt",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-18T18:07:15Z",
      "side": 1,
      "message": "\u003e The approach we took was, that we periodically pull the dictionary from upstream and use that to check in CI, this will also provide us the flexibility to add openbmc-specific words to it. This commit basically pulled things from the upstream codespell repository.\n\nI am fine with that when it is a few Kb.  I don\u0027t want to hold MBs worth of a dictionary, which is already supplied with the tool itself.\n\n\u003e Yes, we could use the one that is already shipped with the codespell package, but we will not have the leverage to add words as and when possible without waiting for things to be upstreamed.\n\nWe can totally add critical non-upstreamed words to an \"openbmc_spelling.txt\".  I have no problem with that.  I just don\u0027t want to duplicate data held elsewhere.  As I pointed out, the script is already trying to use the standardized dictionaries; if we need to add an additional standardized one, that\u0027s fine.  The openbmc_spelling should, to me, only contain words that wouldn\u0027t make sense elsewhere.  The `dubs -\u003e dbus` is an example because an upstream dictionary isn\u0027t likely to hold \"dbus\" and \"dubs\" is a legitimate word in English, but it is a high-probability spelling mistake in our codebase.",
      "parentUuid": "3655d19d_0c27ed52",
      "revId": "901f85dc972dbc4af11b009d51726efbcaa89198",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}