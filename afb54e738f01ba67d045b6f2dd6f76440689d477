{
  "comments": [
    {
      "key": {
        "uuid": "bb00b671_11ab092f",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-05-27T20:00:47Z",
      "side": 1,
      "message": "nit: None of the config_flags are needed as these are common for cmake builds.",
      "revId": "afb54e738f01ba67d045b6f2dd6f76440689d477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1339995_c3116605",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000583
      },
      "writtenOn": "2021-05-27T20:27:49Z",
      "side": 1,
      "message": "Updated. Removed the shared and static lib option as `cmake_flags` already covers them.\n\nI\u0027m a little unsure about the install_prefix, which is set to /usr/local. However I don\u0027t see the LD_LIBRARY_PATH set to include the path.\n\nIn my docker testing, meson couldn\u0027t find the nanopb lib when it\u0027s installed in /usr/local.\n`meson.get_compiler(\u0027c\u0027).find_library(\u0027libprotobuf-nanopb\u0027)`\n\nAdmittedly there\u0027s a `dir` argument in find_library() but I\u0027m not sure if that\u0027s the best solution.",
      "parentUuid": "bb00b671_11ab092f",
      "revId": "afb54e738f01ba67d045b6f2dd6f76440689d477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86074588_1558794a",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-05-28T00:08:38Z",
      "side": 1,
      "message": "/usr/local should be fine, your build should be looking at the \u0027nanopb-config\u0027 dependency for the correct linking and include paths.",
      "parentUuid": "a1339995_c3116605",
      "revId": "afb54e738f01ba67d045b6f2dd6f76440689d477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2489f69b_b71ccd38",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000583
      },
      "writtenOn": "2021-05-28T07:02:19Z",
      "side": 1,
      "message": "It seems it has to be /usr/local; otherwise the lib won\u0027t be copied into the final image from package specific one.\n\nIn addition, nanopb installs the python modules into /usr/local/lib/python3/dist-packages (https://github.com/nanopb/nanopb/blob/master/CMakeLists.txt#L42), which needs to be copied into /usr/local/lib/python3.9/dist-packages in order to run the generator properly.\n\nCode depends on nanopb needs to specify `dirs` in meson build in order to find the nanopb library.",
      "parentUuid": "86074588_1558794a",
      "revId": "afb54e738f01ba67d045b6f2dd6f76440689d477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "015bf460_f6fe74aa",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000583
      },
      "writtenOn": "2021-05-28T08:03:38Z",
      "side": 1,
      "message": "On a second thought, using a symlink is sufficient.",
      "parentUuid": "2489f69b_b71ccd38",
      "revId": "afb54e738f01ba67d045b6f2dd6f76440689d477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15c71739_34718c9a",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-06-02T01:55:27Z",
      "side": 1,
      "message": "Ehh, if this behavior is going to require changes for users of nanopb to be able to locate the library, we should just set the install prefix to /usr here. That\u0027s what bitbake will do anyway.\n\nI was hoping the installed cmake definitions would work with meson\u0027s cmake dependency support and we wouldn\u0027t have to change either, but I guess not.",
      "parentUuid": "015bf460_f6fe74aa",
      "revId": "afb54e738f01ba67d045b6f2dd6f76440689d477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c1dd9bd_4f3762b5",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000583
      },
      "writtenOn": "2021-06-02T02:43:36Z",
      "side": 1,
      "message": "There\u0027s logic here that copies from /usr/local of each package docker into final docker image. https://github.com/openbmc/openbmc-build-scripts/blob/master/scripts/build-unit-test-docker#L509\n\nOne solution is to make `prefix` a Package property so that we can make it specific for nanopb. What do you think?",
      "parentUuid": "15c71739_34718c9a",
      "revId": "afb54e738f01ba67d045b6f2dd6f76440689d477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e182e2cc_895d3b18",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-06-02T07:09:41Z",
      "side": 1,
      "message": "Oh yeah, some backstory on that. Copying from /usr is slow / difficult because most of the contents of the container live in that folder. If we had to copy /usr, we would be repeatedly copying most of the same files over and over. By installing each unique thing to /usr/local and copying them in at the end, copying is relatively fast and efficient since nothing is in /usr/local by default and all the operations are copying unique sets of files.\n\nI wonder if there is something we could do to at least provide symlinks... The most straightfoward fix would be to contribute a proper pkgconfig to nanopb.",
      "parentUuid": "1c1dd9bd_4f3762b5",
      "revId": "afb54e738f01ba67d045b6f2dd6f76440689d477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}