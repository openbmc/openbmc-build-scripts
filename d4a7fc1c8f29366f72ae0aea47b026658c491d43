{
  "comments": [
    {
      "key": {
        "uuid": "bae4b7fa_dc4a0a72",
        "filename": "config/eslint-global-config.json",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-12T18:36:01Z",
      "side": 1,
      "message": "Why are we hardcoding these?  Shouldn\u0027t we be relying on the git ignore files?",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "d4a7fc1c8f29366f72ae0aea47b026658c491d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c83dffae_2b3b1097",
        "filename": "config/eslint-global-config.json",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-11-14T01:49:49Z",
      "side": 1,
      "message": "This is not \"hardcoding\", this is a config file that tell\u0027s eslint to ignore a glob pattern much like writing a glob pattern in the .gitignore file.\n\n\nI have already told this to wak in the discord, but let me tell this again we cannot rely on gitignore . There are json files in various repos in BMC that are purposefully written to be malformed for the unit testing purpose.Those files are present in the .eslintignore file.These files should not be linted but they should not be present in ignore list of git,\n\nSo, the ideal solution would be to append both of them into a single file and then consume that. But as discussed in the discord, just for the sake of google-misc(which has code in subprojects folder) i will not be doing that.",
      "parentUuid": "bae4b7fa_dc4a0a72",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "d4a7fc1c8f29366f72ae0aea47b026658c491d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48be8506_cd8487d0",
        "filename": "config/eslint-global-config.json",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-14T19:48:04Z",
      "side": 1,
      "message": "\u003e This is not \"hardcoding\", this is a config file that tell\u0027s eslint to ignore a glob pattern much like writing a glob pattern in the .gitignore file.\n\nI say hardcoding, because if say, I changed the name of the subprojects folder to say, \"external\", the CI would now break again.  We should not be relying on naming conventions in CI.\n\n\u003e \n\u003e \n\u003e I have already told this to wak in the discord, but let me tell this again we cannot rely on gitignore . There are json files in various repos in BMC that are purposefully written to be malformed for the unit testing purpose.Those files are present in the .eslintignore file.These files should not be linted but they should not be present in ignore list of git,\n\nI\u0027m not sure why one precludes the other?  Using git ls-files doesn\u0027t prevent someone from ignoring certain files additionally with .eslintignore?\n\n\u003e \n\u003e So, the ideal solution would be to append both of them into a single file and then consume that. But as discussed in the discord, just for the sake of google-misc(which has code in subprojects folder) i will not be doing that.\n\nSo, given that current builds are broken for some repos, and you\u0027re not wanting to make changes, what are you proposing to unbreak the build?  I\u0027m not quite following how you\u0027d like to see this go forward, but I\u0027m happy to take your direction here.",
      "parentUuid": "c83dffae_2b3b1097",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "d4a7fc1c8f29366f72ae0aea47b026658c491d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae66b5eb_0f9b95bf",
        "filename": "config/eslint-global-config.json",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-11-15T04:51:48Z",
      "side": 1,
      "message": "\u003e \u003e This is not \"hardcoding\", this is a config file that tell\u0027s eslint to ignore a glob pattern much like writing a glob pattern in the .gitignore file.\n\u003e \n\u003e I say hardcoding, because if say, I changed the name of the subprojects folder to say, \"external\", the CI would now break again.  We should not be relying on naming conventions in CI.\n\nThere are two things here :\n1. subprojects folder name \u0026 placement of that folder(should be always in the root) can never be changed, if it changes the whole meson subprojects infrastructure and the tooling that consume that would eventually fail, in that case we have bigger problems than json validation.\n2. There should be someone telling even the git to ignore the subprojects folder, in this case .gitignore file has the hardcoding. if the subproject folder name changes i dont think git ls-files e.t.c would help in that situation.\n\n\u003e \n\u003e \u003e \n\u003e \u003e \n\u003e \u003e I have already told this to wak in the discord, but let me tell this again we cannot rely on gitignore . There are json files in various repos in BMC that are purposefully written to be malformed for the unit testing purpose.Those files are present in the .eslintignore file.These files should not be linted but they should not be present in ignore list of git,\n\u003e \n\u003e I\u0027m not sure why one precludes the other?  Using git ls-files doesn\u0027t prevent someone from ignoring certain files additionally with .eslintignore?\n\u003e \n\u003e \u003e \n\u003e \u003e So, the ideal solution would be to append both of them into a single file and then consume that. But as discussed in the discord, just for the sake of google-misc(which has code in subprojects folder) i will not be doing that.\n\u003e \n\u003e So, given that current builds are broken for some repos, and you\u0027re not wanting to make changes, what are you proposing to unbreak the build?  I\u0027m not quite following how you\u0027d like to see this go forward, but I\u0027m happy to take your direction here.\nApologies, i did not mean that i dont want to make changes, In the current state, this commit already fixes the issues that are caused due to the build folder and the subprojects folder.\n\nBased on the comments from Patrick and you, rather than using the eslint native pattern checker for json files, i tried testing my changes using the $(git ls-files | grep \u0027\\.json$\u0027) and trigerring the eslint for each file from the pattern, but i see that it is slower than the eslint pattern checker that checks the directory in one shot. And also i would need a better logic to come up with a way to run it on all the files rather than breaking at a single failure(which eslint is doing it for free), so that we can see errors from all the json files in just one run.\n\nCan we get this commit merged first(to avoid people fixing things in their repos), and then investigate on coming up with a better logic later.",
      "parentUuid": "48be8506_cd8487d0",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "d4a7fc1c8f29366f72ae0aea47b026658c491d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f7eb343_c2503ee5",
        "filename": "config/eslint-global-config.json",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-14T21:54:33Z",
      "side": 1,
      "message": "\u003e i see that it is slower than the eslint pattern checker that checks the directory in one shot.\n\nwho cares if it\u0027s slightly slower?   I can\u0027t imagine it\u0027s a big change in overall timing, and compared to things like the build, is negligible.\n\n\u003e i would need a better logic to come up with a way to run it on all the files rather than breaking at a single failure(which eslint is doing it for free), so that we can see errors from all the json files in just one run.\n\nWhy does this matter?  At the end of the day we\u0027re running a check that users should\u0027ve ideally already run, given that we already require testing.  I think this is a nice to have, not a requirement.\n\n\u003e investigate on coming up with a better logic later.\n\nHow much later?  Is this work that you plan on doing?  This commit has been sitting for several weeks and I don\u0027t see any new logic in code review, maybe I missed it?",
      "parentUuid": "ae66b5eb_0f9b95bf",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "d4a7fc1c8f29366f72ae0aea47b026658c491d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53fe37d9_42d9f25c",
        "filename": "config/eslint-global-config.json",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-12-15T04:16:27Z",
      "side": 1,
      "message": "Honestly, I am not totally convinced that git ls-files would be worth doing given the fact that we need to write extra logic(which eslint is doing for free) \u0026 as the current patch already solves the issues. Will leave it to Andrew to take decide, given that he already gave a +1, i think he is okay with this.\n\n\u003e How much later?  Is this work that you plan on doing? \nI cannot really commit a time, I will get to it when ever i get time, but yes I am always willing to do the work if it helps the community.",
      "parentUuid": "1f7eb343_c2503ee5",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "d4a7fc1c8f29366f72ae0aea47b026658c491d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b92adb9e_40fc72ed",
        "filename": "config/eslint-global-config.json",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-15T12:41:29Z",
      "side": 1,
      "message": "Let\u0027s get this merged.  This is actively causing issues for people trying to use the CI tools locally.   While the proposed solution isn\u0027t great for the `google-misc` repository it is no worse than before we had es-lint and it is significantly better for all the other repositories.  \n\nThe lesson learned here is that in the future we should not accept any linters that are not based around `git ls-files`.",
      "parentUuid": "53fe37d9_42d9f25c",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 67
      },
      "revId": "d4a7fc1c8f29366f72ae0aea47b026658c491d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}