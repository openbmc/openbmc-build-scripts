{
  "comments": [
    {
      "key": {
        "uuid": "b66f27e5_6e3c303c",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-16T13:47:12Z",
      "side": 1,
      "message": "We should add a method to skip this or enable this for repositories which aren\u0027t ready for it yet.",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50cffc48_34bc25a4",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-08-18T03:15:49Z",
      "side": 1,
      "message": "i am not sure i get your intent behind wanting to skip this. can you elaborate on why we would need that ? what do you mean by \"aren\u0027t ready for it yet \"?\n\nwe would not want anyone to merge any invalid json even when they are not functionally ready correct ?",
      "parentUuid": "b66f27e5_6e3c303c",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baf8b76a_9b6c263c",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T11:20:09Z",
      "side": 1,
      "message": "Most of the other aspects of this script we allow repositories to opt-out of.  Right now you have this as a simple lint, but in the future I expect this will be extended to a json-style.",
      "parentUuid": "50cffc48_34bc25a4",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5deba0e_0c2c7a98",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-08-23T03:52:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "baf8b76a_9b6c263c",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1f2ffc6_3db09d7c",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-16T13:47:12Z",
      "side": 1,
      "message": "Why only pick the files in the commit and not all of them?  For all the other linters we do everything, so I\u0027d prefer to not do something special for json.",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "767572aa_4bf28009",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-08-18T03:15:49Z",
      "side": 1,
      "message": "yeah i could do that as well, i did not check what others are doing, thinking more on it .. why would we want to run it on all the files every time on every commit ? is it not an overhead ?\n\nis it not just sufficient to run on the commit alone ?",
      "parentUuid": "f1f2ffc6_3db09d7c",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58a5061c_3cbdc345",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T11:20:09Z",
      "side": 1,
      "message": "\u003e is it not an overhead ?\n\nI don\u0027t think it is enough to matter.\n\n\u003e why would we want to run it on all the files every time on every commit ?\n\nAs the linter improves we want it to report issues on files, even if they haven\u0027t been touched recently.\n\nAlso, this git magic is difficult to get right.  In fact, you have it wrong.  As an example:\n\n```\n$ git rm LICENSE              \nrm \u0027meta-phosphor/LICENSE\u0027\n$ git commit -s -m \"remove license\"                                   \n[master bc6321185] remove license\n 1 file changed, 12 deletions(-)\n delete mode 100644 meta-phosphor/LICENSE\n$ git show --pretty\u003d\"\" --name-only -n 1 HEAD~1..HEAD\nmeta-phosphor/LICENSE\n```\n\nSo deletions of json files will show up in your `json_files_in_commit` and then fail when the for-loop calls jsonlint on a file that no longer exists.",
      "parentUuid": "767572aa_4bf28009",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a6114a7_4b3a6a5e",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-08-23T03:52:12Z",
      "side": 1,
      "message": "dang..you are right..i must be sleepy writing this piece of code.",
      "parentUuid": "58a5061c_3cbdc345",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "164598a2_5fa3bbaf",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-16T13:47:12Z",
      "side": 1,
      "message": "Can this space be removed?",
      "range": {
        "startLine": 36,
        "startChar": 21,
        "endLine": 36,
        "endChar": 24
      },
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09d8d3d5_d85cff7e",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-08-18T03:15:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "164598a2_5fa3bbaf",
      "range": {
        "startLine": 36,
        "startChar": 21,
        "endLine": 36,
        "endChar": 24
      },
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7135113_0f8f291d",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-16T13:47:12Z",
      "side": 1,
      "message": "A PHP program?\n\nIt doesn\u0027t appear like this does anything to do with schema validation.  Are there any better linters we could pick up that do that?  I quick search shows maybe `npm jsonlint`?",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86da2f8e_fc399350",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-08-18T03:15:49Z",
      "side": 1,
      "message": "well i quickly checked the package for ubuntu, and its named as jsonlint, but the binary was name as jsonlint-php which was a bit weird\n\nI can change it to npm jsonlint",
      "parentUuid": "f7135113_0f8f291d",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47ca5a9f_8543626d",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T11:20:09Z",
      "side": 1,
      "message": "To be clear, `npm jsonlint` is something else, but it being a real nodejs package I expect it to be better maintained than jsonlint-php.  Also it has some options that allow us to format the json as well, which may be useful.",
      "parentUuid": "86da2f8e_fc399350",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "039d3794_3963b6ba",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-08-23T03:52:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "47ca5a9f_8543626d",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7796ff31_6eb68de4",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-16T13:47:12Z",
      "side": 1,
      "message": "Can you adjust the indentation on this whole block?",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72986e54_e408ef40",
        "filename": "scripts/format-code.sh",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-08-18T03:15:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7796ff31_6eb68de4",
      "revId": "5ad9d1d3bbb8063d3b38be8c2c812400ac96fc98",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}