{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d33e17b4_f35a449e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-25T04:04:22Z",
      "side": 1,
      "message": "Why would we want to do this?  There shouldn\u0027t really be any entire-files that are exempt from the clang-tidy rules.  bmcweb does have an \"ignore\" concept for files within projects we don\u0027t own (ie subprojects) but that\u0027s different.\n\nCan you mention why you think this is necessary, along with some examples of where it would be used?  I think that would help quite a bit.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 11
      },
      "revId": "b4bccfe4e42fe3ed8fd9c8614dbe745c9fcd3338",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36a443ce_03b81712",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-04-25T05:53:39Z",
      "side": 1,
      "message": "By default run-clang-tidy process the files in compile_commands.json.\n\n\u003e Why would we want to do this?  There shouldn\u0027t really be any entire-files that are exempt from the clang-tidy rules.\n\nIf a repo generates code (e.g. with sdbusplus to generate yaml to cpp), the generated cpp files are in compile_commands.json, but we do not really want clang-tidy to process such files:\n* It usually is generated by custom_target, which is OK for regular build, but the file is missing while running clang-tidy\n* The generated files could contain style issues that we do not care to fix.\n\nUsually we do not want clang-tidy check the files in `tests` as well.\n\n\u003e Can you mention why you think this is necessary, along with some examples of where it would be used?  I think that would help quite a bit.\n\nFor example, if you want to enable clang-tidy for phosphor-logging, you could hit the above issues.",
      "parentUuid": "d33e17b4_f35a449e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 11
      },
      "revId": "b4bccfe4e42fe3ed8fd9c8614dbe745c9fcd3338",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc7f094d_00c6d76a",
        "filename": "scripts/unit-test.py",
        "patchSetId": 1
      },
      "lineNbr": 785,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-25T04:04:22Z",
      "side": 1,
      "message": "This is going to break the \"ignore\" filtering that already exists in places like bmcweb, and is also going to ignore clang-tidy for generated files, neither of which seem good.",
      "range": {
        "startLine": 785,
        "startChar": 37,
        "endLine": 785,
        "endChar": 52
      },
      "revId": "b4bccfe4e42fe3ed8fd9c8614dbe745c9fcd3338",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a5169d9_6ef01628",
        "filename": "scripts/unit-test.py",
        "patchSetId": 1
      },
      "lineNbr": 785,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-04-25T05:53:39Z",
      "side": 1,
      "message": "\u003e This is going to break the \"ignore\" filtering that already exists in places like bmcweb, and is also going to ignore clang-tidy for generated files, neither of which seem good.\n\nHow does bmcweb handle the \"ignore\" filter?\n\nWhy do we care about generated files?",
      "parentUuid": "bc7f094d_00c6d76a",
      "range": {
        "startLine": 785,
        "startChar": 37,
        "endLine": 785,
        "endChar": 52
      },
      "revId": "b4bccfe4e42fe3ed8fd9c8614dbe745c9fcd3338",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}