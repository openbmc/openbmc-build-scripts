{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1a1c1e5a_a1c2a979",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2022-06-22T05:18:50Z",
      "side": 1,
      "message": "I think this is something to review for, but we want common sense to be able to override the tools.\n\nIf there\u0027s a case where eg. a URL to a bug tracker, or a stack trace, is included in a commit message, the developer and maintainer should be able to ignore the suggestion of the tool for the benefit of a clearer commit message.\n\nIf this is simply advisory, and is able to be overridden by the repo maintainer, then that is fine.",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a899aabb_b532fc0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T14:33:37Z",
      "side": 1,
      "message": "\u003e I think this is something to review for, but we want common sense to be able to override the tools.\n\nWhich part?  Surely end of line whitespace in your commit message or a 200 character title are something we can just blanket disallow?  Yes, the lint length thing could use some discussion, or maybe we just don\u0027t check the title length at all, or set it to a higher-than-documented value.\n\n\u003e \n\u003e If there\u0027s a case where eg. a URL to a bug tracker, or a stack trace, is included in a commit message, the developer and maintainer should be able to ignore the suggestion of the tool for the benefit of a clearer commit message.\n\nAgreed;  I assumed the tool treated URLs as a single \"word\" so they wouldn\u0027t be split across lines, but I can test that.  I\u0027m also assuming that if stack traces are quoted, they don\u0027t count against your line limit, but I can test that as well.\n\n\u003e \n\u003e If this is simply advisory, and is able to be overridden by the repo maintainer, then that is fine.\n\nAt this point it\u0027s able to be overridden by either the maintainer or the submitter by adding \"gitlint-ignore: all\" to the commit message somewhere.  Is that enough?",
      "parentUuid": "1a1c1e5a_a1c2a979",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85f7d66c_fd689ffa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:26:16Z",
      "side": 1,
      "message": "It\u0027d be good to get your opinions here;  I think they\u0027re valuable, as you\u0027ve been doing this kind of thing a lot longer than I have.",
      "parentUuid": "a899aabb_b532fc0b",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfedaadc_8899f09c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2022-07-15T18:03:12Z",
      "side": 1,
      "message": "Is there a way to disable linting on certain lines to a commit message?  It would be nice if it isn\u0027t all or nothing. Something that allows for escaping valid longer items like a URL or multiline items like a stack trace?",
      "parentUuid": "85f7d66c_fd689ffa",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64b210e8_b79096ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T18:31:56Z",
      "side": 1,
      "message": "I don\u0027t think so:\nhttps://jorisroovers.com/gitlint/configuration/\n\nGo to the heading: \"Commit specific config\"\n\nbut it\u0027s certainly something we could talk with them about adding.",
      "parentUuid": "bfedaadc_8899f09c",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fda6c92_79f9eb99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T20:47:16Z",
      "side": 1,
      "message": "Joel?",
      "parentUuid": "64b210e8_b79096ec",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9963632d_4fbf4869",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-21T21:47:21Z",
      "side": 1,
      "message": "Maybe we should move the discussion we were having on the other file to here - I\u0027m against hard-setting the title max length to 50 and instead using 72 due to how openbmc/openbmc usually prefers at a minimum specifying the meta layer, preferring to also list the repo it\u0027s touching (OR we should change that rule). When I\u0027m reviewing code here and downstream, I tell people that 50 is the rule to follow but 72 is the real hard limit.\n\n\"meta-google: \" is 13 characters for instance, so we\u0027d have 37 chars left for the header which is often not enough.",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e276137_b1ab7507",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 848,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2022-07-15T18:03:12Z",
      "side": 1,
      "message": "why are both lines necessary and the sha?",
      "range": {
        "startLine": 847,
        "startChar": 0,
        "endLine": 848,
        "endChar": 105
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d15aca89_0a0f56e5",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 848,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T18:31:56Z",
      "side": 1,
      "message": "because gitlint installs in 2 packages, gitlint-core and gitlint, but because of the way the pip machinery works, we needed to install gitlint-core first.\n\nWe could talk about taking out the SHA1 if this goes forward, but I did it because it seems like something we\u0027d want to pin on major versions.",
      "parentUuid": "9e276137_b1ab7507",
      "range": {
        "startLine": 847,
        "startChar": 0,
        "endLine": 848,
        "endChar": 105
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}