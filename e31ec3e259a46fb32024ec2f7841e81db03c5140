{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b901ae6e_31aae454",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-08-04T14:34:00Z",
      "side": 1,
      "message": "A few violations of the 72 char limit in this commit message. Maybe you were trying to make a point that this is needed? :)",
      "range": {
        "startLine": 16,
        "startChar": 72,
        "endLine": 16,
        "endChar": 73
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2738933f_03add5ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T16:16:18Z",
      "side": 1,
      "message": "Not done intentionally, but HA!\n\nWill fix.",
      "parentUuid": "b901ae6e_31aae454",
      "range": {
        "startLine": 16,
        "startChar": 72,
        "endLine": 16,
        "endChar": 73
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffe50f7e_aa238f5c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T22:12:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2738933f_03add5ef",
      "range": {
        "startLine": 16,
        "startChar": 72,
        "endLine": 16,
        "endChar": 73
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d231a6c_a89c5b2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-08-04T14:34:00Z",
      "side": 1,
      "message": "My vote would be that this always be an opt-in for projects. As noted elsewhere, when you have to do something like \"meta-facebook:\" or \"meta-google\" in the commit message title, it takes a lot of real estate. And I like those in the title for openbmc/openbmc to know what to ignore. As seen in the review comments here, this feels like a pretty personal choice for a maintainer.",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e23681e_e749158d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T16:16:18Z",
      "side": 1,
      "message": "Like I said in the above thread, surely there\u0027s SOMETHING we can enforce project wide.  A 300 word paragraph put into the first line is surely universally something CI could flag?\n\nI\u0027m happy to just have this in, at least it helps me as a maintainer, but I really think there\u0027s some level of rules that we could enforce.  I think we can all agree that there is no case where we\u0027d accept a whitespace character at the end of a line, or a single paragraph of text?  (and even in those cases, maintainers can override).",
      "parentUuid": "8d231a6c_a89c5b2d",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52ac0c45_f08d9ac7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-08-04T20:50:24Z",
      "side": 1,
      "message": "I agree we could def come up with something. I just don\u0027t think that something is what you have in config/.gitlint. So should we try to get agreement on what that something is or just say the file in this commit is for reference at this point?",
      "parentUuid": "4e23681e_e749158d",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81305a2f_c154adf7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T20:56:18Z",
      "side": 1,
      "message": "I think the later is what I\u0027m hoping for.  That gitlint file was a starting point, which is why I intentionally included everything that\u0027s the default, so we can talk about which things are universal, and which things would we sometimes allow.",
      "parentUuid": "52ac0c45_f08d9ac7",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fe80147_c1b8222b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T22:12:45Z",
      "side": 1,
      "message": "format-code.sh doesn\u0027t apply to openbmc/openbmc commits, so as this commit is written, the points about including meta-\u003ccompany\u003e in the commit message are moot.  They are definitely an issue that I will look at when and if I try to apply this to openbmc/openbmc patches, but as written, I don\u0027t think there\u0027s anything to change here.\n\nI did test the quote thing, and it doesn\u0027t seem to understand quotes.  Will need to look into it further.",
      "parentUuid": "81305a2f_c154adf7",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48988708_22c63117",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T23:14:44Z",
      "side": 1,
      "message": "I ended up writing a minor plugin that handles a bunch of openbmc-specific stuff.  Arguably we could add to the plugin to check for meta-\u003cname\u003e and not include that in the limit, but for the moment, that\u0027s left until we add this to repotest.\n\nDoes that work for you?",
      "parentUuid": "2fe80147_c1b8222b",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38fa5bad_0972a336",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-08-05T13:45:54Z",
      "side": 1,
      "message": "Oh nice, it\u0027s got plugin support too.",
      "parentUuid": "48988708_22c63117",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a1c1e5a_a1c2a979",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2022-06-22T05:18:50Z",
      "side": 1,
      "message": "I think this is something to review for, but we want common sense to be able to override the tools.\n\nIf there\u0027s a case where eg. a URL to a bug tracker, or a stack trace, is included in a commit message, the developer and maintainer should be able to ignore the suggestion of the tool for the benefit of a clearer commit message.\n\nIf this is simply advisory, and is able to be overridden by the repo maintainer, then that is fine.",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a899aabb_b532fc0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T14:33:37Z",
      "side": 1,
      "message": "\u003e I think this is something to review for, but we want common sense to be able to override the tools.\n\nWhich part?  Surely end of line whitespace in your commit message or a 200 character title are something we can just blanket disallow?  Yes, the lint length thing could use some discussion, or maybe we just don\u0027t check the title length at all, or set it to a higher-than-documented value.\n\n\u003e \n\u003e If there\u0027s a case where eg. a URL to a bug tracker, or a stack trace, is included in a commit message, the developer and maintainer should be able to ignore the suggestion of the tool for the benefit of a clearer commit message.\n\nAgreed;  I assumed the tool treated URLs as a single \"word\" so they wouldn\u0027t be split across lines, but I can test that.  I\u0027m also assuming that if stack traces are quoted, they don\u0027t count against your line limit, but I can test that as well.\n\n\u003e \n\u003e If this is simply advisory, and is able to be overridden by the repo maintainer, then that is fine.\n\nAt this point it\u0027s able to be overridden by either the maintainer or the submitter by adding \"gitlint-ignore: all\" to the commit message somewhere.  Is that enough?",
      "parentUuid": "1a1c1e5a_a1c2a979",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85f7d66c_fd689ffa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:26:16Z",
      "side": 1,
      "message": "It\u0027d be good to get your opinions here;  I think they\u0027re valuable, as you\u0027ve been doing this kind of thing a lot longer than I have.",
      "parentUuid": "a899aabb_b532fc0b",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfedaadc_8899f09c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2022-07-15T18:03:12Z",
      "side": 1,
      "message": "Is there a way to disable linting on certain lines to a commit message?  It would be nice if it isn\u0027t all or nothing. Something that allows for escaping valid longer items like a URL or multiline items like a stack trace?",
      "parentUuid": "85f7d66c_fd689ffa",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64b210e8_b79096ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T18:31:56Z",
      "side": 1,
      "message": "I don\u0027t think so:\nhttps://jorisroovers.com/gitlint/configuration/\n\nGo to the heading: \"Commit specific config\"\n\nbut it\u0027s certainly something we could talk with them about adding.",
      "parentUuid": "bfedaadc_8899f09c",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fda6c92_79f9eb99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T20:47:16Z",
      "side": 1,
      "message": "Joel?",
      "parentUuid": "64b210e8_b79096ec",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caac8b8c_32480a82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-08-04T14:34:00Z",
      "side": 1,
      "message": "Did you get a chance to run those tests noted above Ed (how a URL is treated, quoted things like stack traces)? May be somewhat moot if we agree this will be enabled at each repos maintainers discretion.",
      "parentUuid": "5fda6c92_79f9eb99",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f98572eb_56a96793",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T16:16:18Z",
      "side": 1,
      "message": "I have not yet.  I\u0027m wanting to make sure this as an idea isn\u0027t completely dead in the water before I spend a lot more time refining it.",
      "parentUuid": "caac8b8c_32480a82",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9963632d_4fbf4869",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-06-21T21:47:21Z",
      "side": 1,
      "message": "Maybe we should move the discussion we were having on the other file to here - I\u0027m against hard-setting the title max length to 50 and instead using 72 due to how openbmc/openbmc usually prefers at a minimum specifying the meta layer, preferring to also list the repo it\u0027s touching (OR we should change that rule). When I\u0027m reviewing code here and downstream, I tell people that 50 is the rule to follow but 72 is the real hard limit.\n\n\"meta-google: \" is 13 characters for instance, so we\u0027d have 37 chars left for the header which is often not enough.",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df404730_42d55e8e",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T23:14:44Z",
      "side": 1,
      "message": "\u003e Maybe we should move the discussion we were having on the other file to here - I\u0027m against hard-setting the title max length to 50 and instead using 72 due to how openbmc/openbmc usually prefers at a minimum specifying the meta layer, preferring to also list the repo it\u0027s touching (OR we should change that rule). When I\u0027m reviewing code here and downstream, I tell people that 50 is the rule to follow but 72 is the real hard limit.\n\nThis commit doesn\u0027t apply to openbmc/openbmc.  Yes, when and if we do that, we should take that into consideration, does that seem reasonable?\n\n\u003e \n\u003e \"meta-google: \" is 13 characters for instance, so we\u0027d have 37 chars left for the header which is often not enough.",
      "parentUuid": "9963632d_4fbf4869",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab20b8f4_720df0ce",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-04T23:36:36Z",
      "side": 1,
      "message": "It\u0027s also common to use that style of subject-line tagging in other repos though -- for example in dbus-sensors, I (and others) often put something like \"hwmontempsensor: \" or the like, which eats up a third of a 50-char budget.  Personally, I find that tagging useful and wouldn\u0027t want to discourage it.",
      "parentUuid": "df404730_42d55e8e",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee866c6e_42681023",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-08-05T13:15:29Z",
      "side": 1,
      "message": "there\u0027s also reverts, not that they\u0027re common, but in that case git just prepends \u0027Revert \u0027 to the commit.",
      "parentUuid": "ab20b8f4_720df0ce",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c69087d8_211ee74f",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-05T16:59:02Z",
      "side": 1,
      "message": "For the prefix on the commit message, sure, I can see the advantage, but surely there needs to be some limit?  Would 72 be enough?  Technically the rules are 50/72, but 72/72 might be a good starting point?\n\nAs for reverts, gitlint already ignores reverts by default, so no problems there.",
      "parentUuid": "ee866c6e_42681023",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "888609f0_437a4dcc",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-08-05T17:01:06Z",
      "side": 1,
      "message": "I think 72/72 is a good enough limit - and is how I usually enforce my code reviews (I usually tell them that 50 is technically the limit so that they are aware to try to get it to be shorter if possible).",
      "parentUuid": "c69087d8_211ee74f",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4c87579_8352e15e",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-05T22:46:35Z",
      "side": 1,
      "message": "Changed to 72.  I\u0027m not convinced that 72 is the long term answer, id\u0027 rather something better like \"if your commit starts with a single word and a colon, you get extra characters, but still must be \u003c50 after the colon\", but in terms of not letting good be the enemy of better, focusing on the things we agree on, and keeping this patch simple I\u0027m happy to push that discussion to another patch.",
      "parentUuid": "888609f0_437a4dcc",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0be73828_8847772b",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-08-08T16:53:30Z",
      "side": 1,
      "message": "Agreed, and yeah that\u0027s I think the simplest rule to follow -only if there\u0027s the usual header prefix (meta-google: phosphor....: adsfasdf) we extend to 72, otherwise 50.\n\nI guess if we want to be fancy, we would want to enforce that there IS a meta* prefix in our meta layer repos like openbmc/openbmc but that\u0027s a nice to have feature for the future.",
      "parentUuid": "b4c87579_8352e15e",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58d9f88b_e672502b",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-08T21:53:21Z",
      "side": 1,
      "message": "\u003e I guess if we want to be fancy, we would want to enforce that there IS a meta* prefix in our meta layer repos like openbmc/openbmc but that\u0027s a nice to have feature for the future.\n\nNow that we know how to use the gitlint plugins the above is roughly my eventual lan.  Allow meta-*: at the beginning of the line, an don\u0027t count it.",
      "parentUuid": "0be73828_8847772b",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eb58044_a774b8d5",
        "filename": "config/.gitlint",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-08T23:02:41Z",
      "side": 1,
      "message": "s/lan/plan/g",
      "parentUuid": "58d9f88b_e672502b",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e276137_b1ab7507",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 848,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2022-07-15T18:03:12Z",
      "side": 1,
      "message": "why are both lines necessary and the sha?",
      "range": {
        "startLine": 847,
        "startChar": 0,
        "endLine": 848,
        "endChar": 105
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d15aca89_0a0f56e5",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 848,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T18:31:56Z",
      "side": 1,
      "message": "because gitlint installs in 2 packages, gitlint-core and gitlint, but because of the way the pip machinery works, we needed to install gitlint-core first.\n\nWe could talk about taking out the SHA1 if this goes forward, but I did it because it seems like something we\u0027d want to pin on major versions.",
      "parentUuid": "9e276137_b1ab7507",
      "range": {
        "startLine": 847,
        "startChar": 0,
        "endLine": 848,
        "endChar": 105
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee529559_bacf5b06",
        "filename": "scripts/build-unit-test-docker",
        "patchSetId": 2
      },
      "lineNbr": 848,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T23:14:44Z",
      "side": 1,
      "message": "Answered.  Please reopen if this isn\u0027t adequate.",
      "parentUuid": "d15aca89_0a0f56e5",
      "range": {
        "startLine": 847,
        "startChar": 0,
        "endLine": 848,
        "endChar": 105
      },
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81cbdeb4_41278ff0",
        "filename": "scripts/format-code.sh",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-08-04T20:50:24Z",
      "side": 1,
      "message": "If the .gitlint file exists in the repo under test, shouldn\u0027t we use that vs. the global one in the openbmc-build-scripts repo?",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba66a74b_73442b85",
        "filename": "scripts/format-code.sh",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-04T20:53:53Z",
      "side": 1,
      "message": "FWIW, I\u0027d really prefer if we can get away from per-repo policies.  We have too many repositories that languish behind and don\u0027t hold up to the expectations of the rest of the project, and then others that make their own exceptions / policies you have to be aware of and follow.  I\u0027d prefer at most 2 configs for this one: meta-layer (openbmc/openbmc) and code repo (everything else).",
      "parentUuid": "81cbdeb4_41278ff0",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42053b44_af344adf",
        "filename": "scripts/format-code.sh",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T20:56:18Z",
      "side": 1,
      "message": "probably if we\u0027re going to do the per-repo thing first.  I was really hoping that we\u0027d avoid the combinatorial problem we have today where we have N versions of .clang-format/tidy checked into N repos, where there\u0027s little consistency.  In that case, it makes sense to take the hit, because it requires code changes to be made.  Because gitlint only applies to NEW commits, I had thought we could just have one config, and that the \"enable gitlint for this repo\" flag would be temporary.  Maybe that means it should be .gitlint-openbmc as the filename, to disambiguate from .gitlint?",
      "parentUuid": "81cbdeb4_41278ff0",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09717150_aca2afe8",
        "filename": "scripts/format-code.sh",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T20:57:01Z",
      "side": 1,
      "message": "\u003e FWIW, I\u0027d really prefer if we can get away from per-repo policies. \n\nPatrick submitted this as I was typing, and I completely agree with what he said.",
      "parentUuid": "42053b44_af344adf",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00e85f64_44127e53",
        "filename": "scripts/format-code.sh",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T23:14:44Z",
      "side": 1,
      "message": "I\u0027ve updated my position in the commit message;  PTAL.",
      "parentUuid": "09717150_aca2afe8",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "412d94a8_3370d9e3",
        "filename": "scripts/format-code.sh",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-08-05T13:45:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "00e85f64_44127e53",
      "revId": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}