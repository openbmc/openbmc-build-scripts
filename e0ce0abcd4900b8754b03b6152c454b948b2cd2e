{
  "comments": [
    {
      "key": {
        "uuid": "9c71e3ca_e09e9c6e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-19T21:07:02Z",
      "side": 1,
      "message": "Is this necessarily true?  It seems like anything in here is going to be light-weight enough that we shouldn\u0027t care if it runs twice.  If we\u0027re just talking about linting various aspects of the bitbake content, that seems fine to do all the time, and is far less complexity than a new Jenkins target.",
      "range": {
        "startLine": 17,
        "startChar": 54,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d7adb59_1c417e45",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-19T21:21:36Z",
      "side": 1,
      "message": "I guess I had assumed that as we get more tests, running N tests times M platforms, where both M and N are expected to grow, wasn\u0027t a great idea.\n\nAt some point, I expect we\u0027ll start scanning bitbake recipes for bad SRCURI pointers, and other stuff that might be more expensive than just an ls-files and some comparisons.\n\nAnother bonus of this is it\u0027s a lot clearer from the Jenkins job why your build failed, otherwise everytime you check in a patch file, all machine builds would start failing, which doesn\u0027t seem like the best.\n\nWith all that said, if we think it should be run per-machine and we don\u0027t care if it runs multiple times, I\u0027m happy to do that instead.",
      "parentUuid": "9c71e3ca_e09e9c6e",
      "range": {
        "startLine": 17,
        "startChar": 54,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a8364e6_a348a5fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-19T21:31:52Z",
      "side": 1,
      "message": "I don\u0027t care enough either way.  I\u0027ll let Andrew decide since he deals with Jenkins.\n\n\u003e At some point, I expect we\u0027ll start scanning bitbake recipes for bad SRCURI pointers, and other stuff that might be more expensive than just an ls-files and some comparisons.\n\nTo me, this should be handled with a \"sanity\" bbclass in bitbake, but I guess that only gives you coverage for recipes that you\u0027re actually using in a Jenkins build so it doesn\u0027t help for people who put in recipes only used on machines we don\u0027t have an automated build for.",
      "parentUuid": "2d7adb59_1c417e45",
      "range": {
        "startLine": 17,
        "startChar": 54,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "715b36bf_3a142c17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-08-20T13:24:33Z",
      "side": 1,
      "message": "Yeah, lets stick with this. I like that I\u0027ll just add a new \"target\" to jenkins in the matrix and it\u0027ll be very clear why a particular job is failing.",
      "parentUuid": "7a8364e6_a348a5fd",
      "range": {
        "startLine": 17,
        "startChar": 54,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c440b2e5_6f871bae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-20T16:38:56Z",
      "side": 1,
      "message": "\u003e To me, this should be handled with a \"sanity\" bbclass in bitbake\n\nTo some extent, I wanted to at least try to be nice to everyones forks.  A sanity check would fail everyones downstream builds tomorrow, and I\u0027m not prepared to annoy that many people.",
      "parentUuid": "715b36bf_3a142c17",
      "range": {
        "startLine": 17,
        "startChar": 54,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e75012e_45f3e0fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-25T21:09:22Z",
      "side": 1,
      "message": "Sanity tests can be easily disabled though, either in a local.conf or in the whole meta layer. Yocto has a lot of “QA” checks as an indication “you really shouldn’t develop this way” and I see it as the same.  Having said that, I’m not expecting you to write a sanity test and like I said it doesn’t solve the same problem you are. \n\nDo we want this script in this repository?  Or should we put the tests into OpenBMC itself?  It seems like we want them closer to the code so that the forkers can easily run it as well. Maybe they’d still have to know / look for it, but it seems slightly better than in this repo.",
      "parentUuid": "c440b2e5_6f871bae",
      "range": {
        "startLine": 17,
        "startChar": 54,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42a31b1b_42df30fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-26T18:31:17Z",
      "side": 1,
      "message": "\u003e Sanity tests can be easily disabled\n\nYeah, I realized this the day after I made my original comment.\n\n\u003e though, either in a local.conf or in the whole meta layer. Yocto has a lot of “QA” checks as an indication “you really shouldn’t develop this way” and I see it as the same.\n\nSince writing my last response, I had a slight change of mindset, and am starting to come around to the idea of a sanity check.  A sanity check makes the CI more easily runnable by developers, which I think helps.  I\u0027d also like to see us to more things in sanity checks in the future, so this would be a good precident to set.\n\n\u003e  Having said that, I’m not expecting you to write a sanity test and like I said it doesn’t solve the same problem you are. \n\nFWIW, I\u0027m going to try, and am going to sit on this patchset until I convince at least myself that a sanity check isn\u0027t the way to go here.\n\n\u003e \n\u003e Do we want this script in this repository?  Or should we put the tests into OpenBMC itself?\n\nFair question;  I\u0027m not sure I have a strong opinion one way or another.\n\n\u003e  It seems like we want them closer to the code so that the forkers can easily run it as well. Maybe they’d still have to know / look for it, but it seems slightly better than in this repo.\n\nAndrew, if this tracks for you, I\u0027m ok with it and can split this patchset up.",
      "parentUuid": "2e75012e_45f3e0fa",
      "range": {
        "startLine": 17,
        "startChar": 54,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da3f516a_d5b89c35",
        "filename": "run-repotest.sh",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-08-20T13:24:33Z",
      "side": 1,
      "message": "There is a subdirectory called \"scripts\" (even though everything is pretty much a script). I think the general rule of thumb has been to try and put the main scripts in the root directory and the supporting scripts in ./scripts/. This feels like something that would go in that subdirectory.",
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04ae6567_6f98416a",
        "filename": "run-repotest.sh",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-20T13:34:58Z",
      "side": 1,
      "message": "Also can we not name this \".sh\"?  That is an implementation detail that I don\u0027t think should be in the file name.",
      "parentUuid": "da3f516a_d5b89c35",
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cf2530b_b1cbe944",
        "filename": "run-repotest.sh",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-20T16:33:27Z",
      "side": 1,
      "message": "Moving to scripts: ACK\n\nNot naming it .sh, I can do, but everything else in the repo follows .sh.  I don\u0027t have a strong opinion either way, but I originally went with consistency over what\u0027s \"right\"?",
      "parentUuid": "04ae6567_6f98416a",
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dd3676f_5e4e8db2",
        "filename": "run-repotest.sh",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-08-20T18:26:00Z",
      "side": 1,
      "message": "We\u0027ve tended to keep existing scripts as-is as to not impact people used to their names. New one\u0027s though we\u0027ve tried and move in the direction Patrick noted.",
      "parentUuid": "4cf2530b_b1cbe944",
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cd7d811_ecf3fdbc",
        "filename": "run-repotest.sh",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-23T19:03:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4dd3676f_5e4e8db2",
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2d77003_b5a2d72e",
        "filename": "run-repotest.sh",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-25T21:09:22Z",
      "side": 1,
      "message": "Ok. I’d like to rename all the files when I get a chance then. My biggest problem is not having visibility into the random places in Jenkins that calls these. You can choose to go either way.",
      "parentUuid": "4cf2530b_b1cbe944",
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6e59f67_52d57992",
        "filename": "run-repotest.sh",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-26T18:31:17Z",
      "side": 1,
      "message": "If we\u0027re going the route of directly executable scripts then I can change this one.  FWIW, I think there\u0027s only two Jenkins jobs (maybe 3?) where we\u0027d have to change it.",
      "parentUuid": "d2d77003_b5a2d72e",
      "revId": "e0ce0abcd4900b8754b03b6152c454b948b2cd2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}