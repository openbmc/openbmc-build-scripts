{
  "comments": [
    {
      "key": {
        "uuid": "b2e60c03_fa225cee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-09T15:12:17Z",
      "side": 1,
      "message": "Can you elaborate on what the use-case is?\n\nI think the previous global branch was intentional so that we could potentially branch repositories for release branches (ex. a gatesgarth branch).  We should probably avoid removing that feature because there might be users of it (does IBM use that internally?).\n\nMost of the non-openbmc repositories are fixed with a commit number, so it doesn\u0027t matter what branch they are on.  The openbmc repositories are all pointed at HEAD of ${branch}, which defaults to \u0027master\u0027 but can be overwritten globally for the reason I mentioned above.",
      "revId": "07a9c590b95be0e27bc32a46f59bf03d45567a59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08c3e0ba_576d40ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-12-10T00:59:14Z",
      "side": 1,
      "message": "We have a requirement, we cannot guarantee that all downloaded packages have the same branch name (except `master`).\n\nFor example: if we want to use the `devlop` branch of nlohmann/json instead of the `master` branch, but other packages all use the `master` branch, the global branch cannot be implemented.\n\nAlso, after adding this patch, it will not affect the previous logic. If we don\u0027t use it, we don\u0027t need to set it, otherwise, we can set it like this:\n\n```\n# Release 2020-08-06\n\"nlohmann/json\": PackageDef(\n\trev\u003d\"v3.10.4\",\n\tbuild_type\u003d\"cmake\",\n\tbranch\u003d\"devlop\"\n\tconfig_flags\u003d[\"-DJSON_BuildTests\u003dOFF\"],\n\tcustom_post_install\u003d[\n\t\tf\"ln -s {prefix}/include/nlohmann/json.hpp {prefix}/include/json.hpp\",\n\t],\n)\n```",
      "parentUuid": "b2e60c03_fa225cee",
      "revId": "07a9c590b95be0e27bc32a46f59bf03d45567a59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbb6e8e8_7b69fb1e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-10T12:35:19Z",
      "side": 1,
      "message": "Your example doesn\u0027t help me understand the need for this.  The current {branch} is only used when we don\u0027t have a revision.\n\nSee:\n- https://github.com/openbmc/openbmc-build-scripts/blob/master/scripts/build-unit-test-docker#L423\n- https://github.com/openbmc/openbmc-build-scripts/blob/master/scripts/build-unit-test-docker#L438\n\nFor non-openbmc repositories we already specify a revision.  This can be a tag or a commit number.  In neither case does it matter what branch this commit is on; github just gives us the revision we ask for (it is quite common for projects to make tags that are not even on a branch!).  So your example of nlohmann, if we want a revision on the develop branch, we just add that revision to rev.  There is no need for adding a branch also.\n\nBoth the existing {branch} and your proposed change are only useful when we are consulting openbmc repositories where we are picking up HEAD.  For those, my understanding is that we want a consistent branch used for all of those repositories.  I can\u0027t currently conceive of a case where we\u0027d want to add an explicit branch to an openbmc repository... so again, I\u0027m not understanding the utility of your proposal.",
      "parentUuid": "08c3e0ba_576d40ea",
      "revId": "07a9c590b95be0e27bc32a46f59bf03d45567a59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}