{
  "comments": [
    {
      "key": {
        "uuid": "c67c7643_a3ed80a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2020-12-29T21:36:08Z",
      "side": 1,
      "message": "Is there a difference here? or are these all just \"external projects via git\" to the repo downloading them?",
      "range": {
        "startLine": 9,
        "startChar": 25,
        "endLine": 9,
        "endChar": 56
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8419749_31bd5c77",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2020-12-30T02:14:29Z",
      "side": 1,
      "message": "I mention `subprojects` for meson and `externalprojects` for cmake.\nBut I did only test this case for dbus-sensors which is a cmake project.\n\nWill reword.",
      "parentUuid": "c67c7643_a3ed80a0",
      "range": {
        "startLine": 9,
        "startChar": 25,
        "endLine": 9,
        "endChar": 56
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcfe02d1_28278f93",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2020-12-29T21:36:08Z",
      "side": 1,
      "message": "Something else seems to be wrong with dbus-sensors downloading nlohmann-json via git during ci when nlohmann-json is already included in the docker image.",
      "range": {
        "startLine": 15,
        "startChar": 30,
        "endLine": 16,
        "endChar": 37
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b8e2518_b7a1b698",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2020-12-30T02:14:29Z",
      "side": 1,
      "message": "That is the intended behavior for the cmake repos, that it sets `YOCTO` OFF by default and runs repo CI by downloading and compiling all the dependencies as externalprojects.",
      "parentUuid": "fcfe02d1_28278f93",
      "range": {
        "startLine": 15,
        "startChar": 30,
        "endLine": 16,
        "endChar": 37
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba886723_5b82fef6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2020-12-30T02:51:33Z",
      "side": 1,
      "message": "I\u0027m not referring to doing a machine image build using Yocto. If dbus-sensors is using the `openbmc-build-scripts` to run repo-ci, then why is it explicitly downloading nlohmann-json when this script would already have that installed within the docker container? That\u0027s a question outside the scope of this change (however it\u0027s causing the need for this change) since many other repos do not explicitly download/install nlohmann-json for their repo-ci.",
      "parentUuid": "6b8e2518_b7a1b698",
      "range": {
        "startLine": 15,
        "startChar": 30,
        "endLine": 16,
        "endChar": 37
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d7faf9f_d445cc90",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2020-12-30T08:31:49Z",
      "side": 1,
      "message": "When bmcweb was using cmake, I did send a patch to make \"YOCTO\" default so that repo-ci could use the docker image\u0027s environment to run the build and test. It was rejected.\nSo I assume that is really intended behavior for such repos.\nSee https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/27409",
      "parentUuid": "ba886723_5b82fef6",
      "range": {
        "startLine": 15,
        "startChar": 30,
        "endLine": 16,
        "endChar": 37
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32be02ca_2128bd75",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2021-01-05T15:56:15Z",
      "side": 1,
      "message": "That\u0027s fine, it\u0027s inefficient for these repos in docker CI to download these dependencies twice since they may already present in the docker image. For example, it doesn\u0027t look like dbus-sensors checks for nlohmann json prior to downloading it into the repo directory.",
      "parentUuid": "7d7faf9f_d445cc90",
      "range": {
        "startLine": 15,
        "startChar": 30,
        "endLine": 16,
        "endChar": 37
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c81bebe0_d5916298",
        "filename": "build-unit-test-docker.sh",
        "patchSetId": 1
      },
      "lineNbr": 517,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2020-12-29T21:36:08Z",
      "side": 1,
      "message": "Wouldn\u0027t it be better to have this set for the base set of openbmc projects included above in the case they include any external projects via git or any other ones for that matter?",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 517,
        "endChar": 12
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5628906a_7e64c355",
        "filename": "build-unit-test-docker.sh",
        "patchSetId": 1
      },
      "lineNbr": 517,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2020-12-30T02:14:29Z",
      "side": 1,
      "message": "The above steps runs at docker build stage, where the proxy settings are from the \"--build-arg\".\n\nThis ${PROXY_CMD} is intended to set the proxy in the docker image, so when the container runs, e.g. repo CI runs, it uses the proxy.",
      "parentUuid": "c81bebe0_d5916298",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 517,
        "endChar": 12
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf729331_fa5cc04a",
        "filename": "build-unit-test-docker.sh",
        "patchSetId": 1
      },
      "lineNbr": 517,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2020-12-30T02:51:33Z",
      "side": 1,
      "message": "Right, I\u0027m asking why it was added to the end of the docker image build instead of being done earlier so that the repos that are always included in the docker image build get the possible benefit of the proxy if they download any external projects via git.",
      "parentUuid": "5628906a_7e64c355",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 517,
        "endChar": 12
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15d041e8_fb5a4574",
        "filename": "build-unit-test-docker.sh",
        "patchSetId": 1
      },
      "lineNbr": 517,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2020-12-30T08:31:49Z",
      "side": 1,
      "message": "\u003e if they download any external projects via git.\n\nAs explained above, the docker build step does not use the environment of the container, it uses the below `--build-arg` instead.\n\nBesides, you could see that the ${HOME} is created at the \"Final configuration for the workspace\", so the proxy settings are here after ${HOME} is created.\n\nLast, by putting it at the last step makes it could re-use previously downloaded docker images (cached), so it\u0027s faster if you already have built the docker image.",
      "parentUuid": "bf729331_fa5cc04a",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 517,
        "endChar": 12
      },
      "revId": "196341cfe0950091bb4fbc9a61341db45c045b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}